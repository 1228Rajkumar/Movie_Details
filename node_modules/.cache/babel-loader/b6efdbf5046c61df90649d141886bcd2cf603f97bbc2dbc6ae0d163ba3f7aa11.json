{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { popularMovies, searchByGenre } from './moviesAction';\nconst movieSlice = createSlice({\n  name: 'movies',\n  initialState: {\n    loading: false,\n    allMoviesData: [],\n    movieData: [],\n    genres: '',\n    searchTerm: \"\"\n  },\n  reducers: {\n    reset: state => {\n      state.loading = false;\n    },\n    setAllMovies: (state, action) => {\n      state.allMovies = action.payload;\n    },\n    setGenres: (state, action) => {\n      state.genres = action.payload;\n    },\n    setSearchTerm: (state, action) => {\n      state.searchTerm = action.payload;\n    },\n    extraReducers: builder => {\n      builder.addcase(popularMovies.pending, state => {\n        state.loading = true;\n      }).addcase(popularMovies.fulfilled, (state, action) => {\n        state.loading = false;\n        state.allMoviesData.push(action.payload.results);\n      }).addcase(popularMovies.rejected, (state, action) => {\n        state.loading = false;\n        state.allMoviesData = [];\n      }).addcase(searchByGenre.pending, state => {\n        state.loading = true;\n      }).addcase(searchByGenre.fulfilled, (state, action) => {\n        state.loading = false;\n        state.allMoviesData = action.payload;\n      }).addcase(searchByGenre.rejected, state => {\n        state.loading = true;\n        state.allMoviesData = [];\n      });\n    }\n  }\n});\nexport const {\n  setAllMovies,\n  setGenres,\n  setSearchTerm,\n  reset\n} = movieSlice.actions;\nexport default movieSlice.reducer;","map":{"version":3,"names":["createSlice","popularMovies","searchByGenre","movieSlice","name","initialState","loading","allMoviesData","movieData","genres","searchTerm","reducers","reset","state","setAllMovies","action","allMovies","payload","setGenres","setSearchTerm","extraReducers","builder","addcase","pending","fulfilled","push","results","rejected","actions","reducer"],"sources":["/home/rajkumard/Desktop/ReactProjects/movie-search/src/features/movies/movieSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { popularMovies, searchByGenre } from './moviesAction';\n\nconst movieSlice = createSlice({\n  name: 'movies',\n  initialState: {\n    loading: false,\n    allMoviesData: [],\n    movieData: [],\n    genres: '',\n    searchTerm: \"\",\n  },\n  reducers: {\n    reset: (state) => {\n      state.loading = false;\n    },\n    setAllMovies: (state, action) => {\n      state.allMovies = action.payload;\n    },\n    setGenres: (state, action) => {\n      state.genres = action.payload;\n    },\n    setSearchTerm: (state, action) => {\n      state.searchTerm = action.payload;\n    },\n\n\n    extraReducers: (builder) => {\n      builder.addcase(popularMovies.pending, (state) => {\n        state.loading = true;\n      })\n        .addcase(popularMovies.fulfilled, (state, action) => {\n          state.loading = false;\n          state.allMoviesData.push(action.payload.results);\n        })\n        .addcase(popularMovies.rejected, (state, action) => {\n          state.loading = false;\n          state.allMoviesData = [];\n        })\n        .addcase(searchByGenre.pending, (state) => {\n          state.loading = true;\n        })\n        .addcase(searchByGenre.fulfilled, (state, action) => {\n          state.loading = false;\n          state.allMoviesData = action.payload;\n        })\n        .addcase(searchByGenre.rejected, (state) => {\n          state.loading = true;\n          state.allMoviesData = [];\n        })\n    },\n  },\n});\n\nexport const {\n  setAllMovies,\n  setGenres,\n  setSearchTerm,\n  reset\n} = movieSlice.actions;\n\nexport default movieSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,aAAa,EAAEC,aAAa,QAAQ,gBAAgB;AAE7D,MAAMC,UAAU,GAAGH,WAAW,CAAC;EAC7BI,IAAI,EAAE,QAAQ;EACdC,YAAY,EAAE;IACZC,OAAO,EAAE,KAAK;IACdC,aAAa,EAAE,EAAE;IACjBC,SAAS,EAAE,EAAE;IACbC,MAAM,EAAE,EAAE;IACVC,UAAU,EAAE;EACd,CAAC;EACDC,QAAQ,EAAE;IACRC,KAAK,EAAGC,KAAK,IAAK;MAChBA,KAAK,CAACP,OAAO,GAAG,KAAK;IACvB,CAAC;IACDQ,YAAY,EAAEA,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC/BF,KAAK,CAACG,SAAS,GAAGD,MAAM,CAACE,OAAO;IAClC,CAAC;IACDC,SAAS,EAAEA,CAACL,KAAK,EAAEE,MAAM,KAAK;MAC5BF,KAAK,CAACJ,MAAM,GAAGM,MAAM,CAACE,OAAO;IAC/B,CAAC;IACDE,aAAa,EAAEA,CAACN,KAAK,EAAEE,MAAM,KAAK;MAChCF,KAAK,CAACH,UAAU,GAAGK,MAAM,CAACE,OAAO;IACnC,CAAC;IAGDG,aAAa,EAAGC,OAAO,IAAK;MAC1BA,OAAO,CAACC,OAAO,CAACrB,aAAa,CAACsB,OAAO,EAAGV,KAAK,IAAK;QAChDA,KAAK,CAACP,OAAO,GAAG,IAAI;MACtB,CAAC,CAAC,CACCgB,OAAO,CAACrB,aAAa,CAACuB,SAAS,EAAE,CAACX,KAAK,EAAEE,MAAM,KAAK;QACnDF,KAAK,CAACP,OAAO,GAAG,KAAK;QACrBO,KAAK,CAACN,aAAa,CAACkB,IAAI,CAACV,MAAM,CAACE,OAAO,CAACS,OAAO,CAAC;MAClD,CAAC,CAAC,CACDJ,OAAO,CAACrB,aAAa,CAAC0B,QAAQ,EAAE,CAACd,KAAK,EAAEE,MAAM,KAAK;QAClDF,KAAK,CAACP,OAAO,GAAG,KAAK;QACrBO,KAAK,CAACN,aAAa,GAAG,EAAE;MAC1B,CAAC,CAAC,CACDe,OAAO,CAACpB,aAAa,CAACqB,OAAO,EAAGV,KAAK,IAAK;QACzCA,KAAK,CAACP,OAAO,GAAG,IAAI;MACtB,CAAC,CAAC,CACDgB,OAAO,CAACpB,aAAa,CAACsB,SAAS,EAAE,CAACX,KAAK,EAAEE,MAAM,KAAK;QACnDF,KAAK,CAACP,OAAO,GAAG,KAAK;QACrBO,KAAK,CAACN,aAAa,GAAGQ,MAAM,CAACE,OAAO;MACtC,CAAC,CAAC,CACDK,OAAO,CAACpB,aAAa,CAACyB,QAAQ,EAAGd,KAAK,IAAK;QAC1CA,KAAK,CAACP,OAAO,GAAG,IAAI;QACpBO,KAAK,CAACN,aAAa,GAAG,EAAE;MAC1B,CAAC,CAAC;IACN;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EACXO,YAAY;EACZI,SAAS;EACTC,aAAa;EACbP;AACF,CAAC,GAAGT,UAAU,CAACyB,OAAO;AAEtB,eAAezB,UAAU,CAAC0B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}