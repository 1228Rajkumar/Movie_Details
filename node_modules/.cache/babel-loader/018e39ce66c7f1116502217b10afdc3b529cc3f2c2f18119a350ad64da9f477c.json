{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { popularMovies, searchByGenre } from './moviesAction';\nconst movieSlice = createSlice({\n  name: 'movies',\n  initialState: {\n    loading: false,\n    allMoviesData: [],\n    movieData: [],\n    genres: '',\n    searchTerm: \"\",\n    movieId: ''\n  },\n  reducers: {\n    reset: state => {\n      state.loading = false;\n    },\n    setAllMovies: (state, action) => {\n      state.allMovies = action.payload;\n    },\n    setGenres: (state, action) => {\n      state.genres = action.payload;\n    },\n    setSearchTerm: (state, action) => {\n      state.searchTerm = action.payload;\n    },\n    setMovieId: (state, action) => {\n      state.genres = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(popularMovies.pending, state => {\n      state.loading = true;\n    }).addCase(popularMovies.fulfilled, (state, action) => {\n      state.loading = false;\n      state.allMoviesData = action.payload;\n    }).addCase(popularMovies.rejected, (state, action) => {\n      state.loading = false;\n      state.allMoviesData = [];\n    }).addCase(searchByGenre.pending, state => {\n      state.loading = true;\n    }).addCase(searchByGenre.fulfilled, (state, action) => {\n      state.loading = false;\n      state.allMoviesData = action.payload;\n    }).addCase(searchByGenre.rejected, state => {\n      state.loading = true;\n      state.allMoviesData = [];\n    });\n  }\n});\nexport const {\n  setAllMovies,\n  setGenres,\n  setSearchTerm,\n  reset\n} = movieSlice.actions;\nexport default movieSlice.reducer;","map":{"version":3,"names":["createSlice","popularMovies","searchByGenre","movieSlice","name","initialState","loading","allMoviesData","movieData","genres","searchTerm","movieId","reducers","reset","state","setAllMovies","action","allMovies","payload","setGenres","setSearchTerm","setMovieId","extraReducers","builder","addCase","pending","fulfilled","rejected","actions","reducer"],"sources":["/home/rajkumard/Desktop/ReactProjects/movie-search/src/features/movies/movieSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { popularMovies, searchByGenre } from './moviesAction';\n\nconst movieSlice = createSlice({\n  name: 'movies',\n  initialState: {\n    loading: false,\n    allMoviesData: [],\n    movieData: [],\n    genres: '',\n    searchTerm: \"\",\n    movieId:''\n  },\n  reducers: {\n    reset: (state) => {\n      state.loading = false;\n    },\n    setAllMovies: (state, action) => {\n      state.allMovies = action.payload;\n    },\n    setGenres: (state, action) => {\n      state.genres = action.payload;\n    },\n    setSearchTerm: (state, action) => {\n      state.searchTerm = action.payload;\n    },\n    setMovieId: (state, action) => {\n      state.genres = action.payload;\n    },\n  },\n\n    extraReducers: (builder) => {\n      builder.addCase(popularMovies.pending, (state) => {\n        state.loading = true;\n      })\n        .addCase(popularMovies.fulfilled, (state, action) => {\n          state.loading = false;\n          state.allMoviesData = action.payload;\n        })\n        .addCase(popularMovies.rejected, (state, action) => {\n          state.loading = false;\n          state.allMoviesData = [];\n        })\n        .addCase(searchByGenre.pending, (state) => {\n          state.loading = true;\n        })\n        .addCase(searchByGenre.fulfilled, (state, action) => {\n          state.loading = false;\n          state.allMoviesData = action.payload;\n        })\n        .addCase(searchByGenre.rejected, (state) => {\n          state.loading = true;\n          state.allMoviesData = [];\n        })\n    },\n  },);\n\nexport const {\n  setAllMovies,\n  setGenres,\n  setSearchTerm,\n  reset\n} = movieSlice.actions;\n\nexport default movieSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,aAAa,EAAEC,aAAa,QAAQ,gBAAgB;AAE7D,MAAMC,UAAU,GAAGH,WAAW,CAAC;EAC7BI,IAAI,EAAE,QAAQ;EACdC,YAAY,EAAE;IACZC,OAAO,EAAE,KAAK;IACdC,aAAa,EAAE,EAAE;IACjBC,SAAS,EAAE,EAAE;IACbC,MAAM,EAAE,EAAE;IACVC,UAAU,EAAE,EAAE;IACdC,OAAO,EAAC;EACV,CAAC;EACDC,QAAQ,EAAE;IACRC,KAAK,EAAGC,KAAK,IAAK;MAChBA,KAAK,CAACR,OAAO,GAAG,KAAK;IACvB,CAAC;IACDS,YAAY,EAAEA,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC/BF,KAAK,CAACG,SAAS,GAAGD,MAAM,CAACE,OAAO;IAClC,CAAC;IACDC,SAAS,EAAEA,CAACL,KAAK,EAAEE,MAAM,KAAK;MAC5BF,KAAK,CAACL,MAAM,GAAGO,MAAM,CAACE,OAAO;IAC/B,CAAC;IACDE,aAAa,EAAEA,CAACN,KAAK,EAAEE,MAAM,KAAK;MAChCF,KAAK,CAACJ,UAAU,GAAGM,MAAM,CAACE,OAAO;IACnC,CAAC;IACDG,UAAU,EAAEA,CAACP,KAAK,EAAEE,MAAM,KAAK;MAC7BF,KAAK,CAACL,MAAM,GAAGO,MAAM,CAACE,OAAO;IAC/B;EACF,CAAC;EAECI,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAACvB,aAAa,CAACwB,OAAO,EAAGX,KAAK,IAAK;MAChDA,KAAK,CAACR,OAAO,GAAG,IAAI;IACtB,CAAC,CAAC,CACCkB,OAAO,CAACvB,aAAa,CAACyB,SAAS,EAAE,CAACZ,KAAK,EAAEE,MAAM,KAAK;MACnDF,KAAK,CAACR,OAAO,GAAG,KAAK;MACrBQ,KAAK,CAACP,aAAa,GAAGS,MAAM,CAACE,OAAO;IACtC,CAAC,CAAC,CACDM,OAAO,CAACvB,aAAa,CAAC0B,QAAQ,EAAE,CAACb,KAAK,EAAEE,MAAM,KAAK;MAClDF,KAAK,CAACR,OAAO,GAAG,KAAK;MACrBQ,KAAK,CAACP,aAAa,GAAG,EAAE;IAC1B,CAAC,CAAC,CACDiB,OAAO,CAACtB,aAAa,CAACuB,OAAO,EAAGX,KAAK,IAAK;MACzCA,KAAK,CAACR,OAAO,GAAG,IAAI;IACtB,CAAC,CAAC,CACDkB,OAAO,CAACtB,aAAa,CAACwB,SAAS,EAAE,CAACZ,KAAK,EAAEE,MAAM,KAAK;MACnDF,KAAK,CAACR,OAAO,GAAG,KAAK;MACrBQ,KAAK,CAACP,aAAa,GAAGS,MAAM,CAACE,OAAO;IACtC,CAAC,CAAC,CACDM,OAAO,CAACtB,aAAa,CAACyB,QAAQ,EAAGb,KAAK,IAAK;MAC1CA,KAAK,CAACR,OAAO,GAAG,IAAI;MACpBQ,KAAK,CAACP,aAAa,GAAG,EAAE;IAC1B,CAAC,CAAC;EACN;AACF,CAAE,CAAC;AAEL,OAAO,MAAM;EACXQ,YAAY;EACZI,SAAS;EACTC,aAAa;EACbP;AACF,CAAC,GAAGV,UAAU,CAACyB,OAAO;AAEtB,eAAezB,UAAU,CAAC0B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}