{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { popularMovies, searchByGenre } from './moviesAction';\nconst movieSlice = createSlice({\n  name: 'movies',\n  initialState: {\n    loading: false,\n    allMoviesData: [],\n    movieData: [],\n    genres: '',\n    searchTerm: \"\"\n  },\n  reducers: {\n    reset: state => {\n      state.loading = false;\n    },\n    setAllMovies: (state, action) => {\n      state.allMovies = action.payload;\n    },\n    setGenres: (state, action) => {\n      state.genres = action.payload;\n    },\n    setSearchTerm: (state, action) => {\n      state.searchTerm = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(popularMovies.pending, state => {\n      state.loading = true;\n    }).addCase(popularMovies.fulfilled, (state, action) => {\n      state.loading = false;\n      state.allMoviesData = action.payload;\n    }).addCase(popularMovies.rejected, (state, action) => {\n      state.loading = false;\n      state.allMoviesData = [];\n    }).addCase(searchByGenre.pending, state => {\n      state.loading = true;\n    }).addCase(searchByGenre.fulfilled, (state, action) => {\n      state.loading = false;\n      state.allMoviesData.push(action.payload);\n    }).addCase(searchByGenre.rejected, state => {\n      state.loading = true;\n      state.allMoviesData = [];\n    });\n  }\n});\nexport const {\n  setAllMovies,\n  setGenres,\n  setSearchTerm,\n  reset\n} = movieSlice.actions;\nexport default movieSlice.reducer;","map":{"version":3,"names":["createSlice","popularMovies","searchByGenre","movieSlice","name","initialState","loading","allMoviesData","movieData","genres","searchTerm","reducers","reset","state","setAllMovies","action","allMovies","payload","setGenres","setSearchTerm","extraReducers","builder","addCase","pending","fulfilled","rejected","push","actions","reducer"],"sources":["/home/rajkumard/Desktop/ReactProjects/movie-search/src/features/movies/movieSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { popularMovies, searchByGenre } from './moviesAction';\n\nconst movieSlice = createSlice({\n  name: 'movies',\n  initialState: {\n    loading: false,\n    allMoviesData: [],\n    movieData: [],\n    genres: '',\n    searchTerm: \"\",\n  },\n  reducers: {\n    reset: (state) => {\n      state.loading = false;\n    },\n    setAllMovies: (state, action) => {\n      state.allMovies = action.payload;\n    },\n    setGenres: (state, action) => {\n      state.genres = action.payload;\n    },\n    setSearchTerm: (state, action) => {\n      state.searchTerm = action.payload;\n    },\n  },\n\n    extraReducers: (builder) => {\n      builder.addCase(popularMovies.pending, (state) => {\n        state.loading = true;\n      })\n        .addCase(popularMovies.fulfilled, (state, action) => {\n          state.loading = false;\n          state.allMoviesData = action.payload;\n        })\n        .addCase(popularMovies.rejected, (state, action) => {\n          state.loading = false;\n          state.allMoviesData = [];\n        })\n        .addCase(searchByGenre.pending, (state) => {\n          state.loading = true;\n        })\n        .addCase(searchByGenre.fulfilled, (state, action) => {\n          state.loading = false;\n          state.allMoviesData.push(action.payload);\n        })\n        .addCase(searchByGenre.rejected, (state) => {\n          state.loading = true;\n          state.allMoviesData = [];\n        })\n    },\n  },);\n\nexport const {\n  setAllMovies,\n  setGenres,\n  setSearchTerm,\n  reset\n} = movieSlice.actions;\n\nexport default movieSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,aAAa,EAAEC,aAAa,QAAQ,gBAAgB;AAE7D,MAAMC,UAAU,GAAGH,WAAW,CAAC;EAC7BI,IAAI,EAAE,QAAQ;EACdC,YAAY,EAAE;IACZC,OAAO,EAAE,KAAK;IACdC,aAAa,EAAE,EAAE;IACjBC,SAAS,EAAE,EAAE;IACbC,MAAM,EAAE,EAAE;IACVC,UAAU,EAAE;EACd,CAAC;EACDC,QAAQ,EAAE;IACRC,KAAK,EAAGC,KAAK,IAAK;MAChBA,KAAK,CAACP,OAAO,GAAG,KAAK;IACvB,CAAC;IACDQ,YAAY,EAAEA,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC/BF,KAAK,CAACG,SAAS,GAAGD,MAAM,CAACE,OAAO;IAClC,CAAC;IACDC,SAAS,EAAEA,CAACL,KAAK,EAAEE,MAAM,KAAK;MAC5BF,KAAK,CAACJ,MAAM,GAAGM,MAAM,CAACE,OAAO;IAC/B,CAAC;IACDE,aAAa,EAAEA,CAACN,KAAK,EAAEE,MAAM,KAAK;MAChCF,KAAK,CAACH,UAAU,GAAGK,MAAM,CAACE,OAAO;IACnC;EACF,CAAC;EAECG,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAACrB,aAAa,CAACsB,OAAO,EAAGV,KAAK,IAAK;MAChDA,KAAK,CAACP,OAAO,GAAG,IAAI;IACtB,CAAC,CAAC,CACCgB,OAAO,CAACrB,aAAa,CAACuB,SAAS,EAAE,CAACX,KAAK,EAAEE,MAAM,KAAK;MACnDF,KAAK,CAACP,OAAO,GAAG,KAAK;MACrBO,KAAK,CAACN,aAAa,GAAGQ,MAAM,CAACE,OAAO;IACtC,CAAC,CAAC,CACDK,OAAO,CAACrB,aAAa,CAACwB,QAAQ,EAAE,CAACZ,KAAK,EAAEE,MAAM,KAAK;MAClDF,KAAK,CAACP,OAAO,GAAG,KAAK;MACrBO,KAAK,CAACN,aAAa,GAAG,EAAE;IAC1B,CAAC,CAAC,CACDe,OAAO,CAACpB,aAAa,CAACqB,OAAO,EAAGV,KAAK,IAAK;MACzCA,KAAK,CAACP,OAAO,GAAG,IAAI;IACtB,CAAC,CAAC,CACDgB,OAAO,CAACpB,aAAa,CAACsB,SAAS,EAAE,CAACX,KAAK,EAAEE,MAAM,KAAK;MACnDF,KAAK,CAACP,OAAO,GAAG,KAAK;MACrBO,KAAK,CAACN,aAAa,CAACmB,IAAI,CAACX,MAAM,CAACE,OAAO,CAAC;IAC1C,CAAC,CAAC,CACDK,OAAO,CAACpB,aAAa,CAACuB,QAAQ,EAAGZ,KAAK,IAAK;MAC1CA,KAAK,CAACP,OAAO,GAAG,IAAI;MACpBO,KAAK,CAACN,aAAa,GAAG,EAAE;IAC1B,CAAC,CAAC;EACN;AACF,CAAE,CAAC;AAEL,OAAO,MAAM;EACXO,YAAY;EACZI,SAAS;EACTC,aAAa;EACbP;AACF,CAAC,GAAGT,UAAU,CAACwB,OAAO;AAEtB,eAAexB,UAAU,CAACyB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}